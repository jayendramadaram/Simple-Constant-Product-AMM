/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { AMM, AMMInterface } from "../../contracts/AMM";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "PoolStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_token1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_token2",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amtToken2",
        type: "uint256",
      },
    ],
    name: "estimateToken1GivenToken2",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amtToken1",
        type: "uint256",
      },
    ],
    name: "estimateToken2GivenToken1",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken2",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
    ],
    name: "getWithdrawEstimate",
    outputs: [
      {
        internalType: "uint256",
        name: "token1out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token2out",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amtToken1",
        type: "uint256",
      },
    ],
    name: "swapToken1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amtToken2",
        type: "uint256",
      },
    ],
    name: "swapToken2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_share",
        type: "uint256",
      },
    ],
    name: "withdrawLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620016be380380620016be833981810160405281019062000037919062000111565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050505062000158565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000d982620000ac565b9050919050565b620000eb81620000cc565b8114620000f757600080fd5b50565b6000815190506200010b81620000e0565b92915050565b600080604083850312156200012b576200012a620000a7565b5b60006200013b85828601620000fa565b92505060206200014e85828601620000fa565b9150509250929050565b60805160a051611516620001a860003960008181610353015281816104bb015281816107b90152610c41015260008181610267015281816105db015281816106cb0152610b2101526115166000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a5f0a26f1161005b578063a5f0a26f14610111578063b32440411461011b578063f4cb34d41461014c578063fb92eb3f1461016857610088565b80630a861f2a1461008d5780633944eeec146100a9578063980d69d3146100d95780639cd441da146100f5575b600080fd5b6100a760048036038101906100a29190610e2c565b610198565b005b6100c360048036038101906100be9190610e2c565b610442565b6040516100d09190610e68565b60405180910390f35b6100f360048036038101906100ee9190610e2c565b6104ac565b005b61010f600480360381019061010a9190610e83565b6106c9565b005b610119610a67565b005b61013560048036038101906101309190610e2c565b610a69565b604051610143929190610ec3565b60405180910390f35b61016660048036038101906101619190610e2c565b610b12565b005b610182600480360381019061017d9190610e2c565b610d2f565b60405161018f9190610e68565b60405180910390f35b6000806101a483610a69565b9150915082600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546101f79190610f1b565b925050819055508260008082825461020f9190610f1b565b9250508190555081600160008282546102289190610f1b565b9250508190555080600260008282546102419190610f1b565b9250508190555061025f600254600154610d9990919063ffffffff16565b6003819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016102c0929190610f90565b602060405180830381600087803b1580156102da57600080fd5b505af11580156102ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103129190610ff1565b610351576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103489061107b565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103ac929190610f90565b602060405180830381600087803b1580156103c657600080fd5b505af11580156103da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fe9190610ff1565b61043d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610434906110e7565b60405180910390fd5b505050565b60008061045a83600254610daf90919063ffffffff16565b9050600061047382600354610dc590919063ffffffff16565b905061048a82600254610ddb90919063ffffffff16565b92506002548314156104a55782806104a190611107565b9350505b5050919050565b60006104b782610442565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161051693929190611131565b602060405180830381600087803b15801561053057600080fd5b505af1158015610544573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105689190610ff1565b6105a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059e906111b4565b60405180910390fd5b81600260008282546105b991906111d4565b9250508190555080600160008282546105d29190610f1b565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610634929190610f90565b602060405180830381600087803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106869190610ff1565b6106c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106bc906110e7565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161072693929190611131565b602060405180830381600087803b15801561074057600080fd5b505af1158015610754573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107789190610ff1565b6107b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ae906111b4565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161081493929190611131565b602060405180830381600087803b15801561082e57600080fd5b505af1158015610842573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108669190610ff1565b6108a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089c90611276565b60405180910390fd5b60008060005414156108c857620f424060646108c19190611296565b905061096a565b60006108f36001546108e586600054610d9990919063ffffffff16565b610dc590919063ffffffff16565b9050600061092060025461091286600054610d9990919063ffffffff16565b610dc590919063ffffffff16565b9050808214610964576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095b90611362565b60405180910390fd5b81925050505b600081116109ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109a4906113ce565b60405180910390fd5b6109c283600154610daf90919063ffffffff16565b506109d882600254610daf90919063ffffffff16565b506109f0600254600154610d9990919063ffffffff16565b600381905550610a0b81600054610daf90919063ffffffff16565b5080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a5b91906111d4565b92505081905550505050565b565b600080600054831115610ab1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa890611460565b60405180910390fd5b6000610adc600054610ace60015487610d9990919063ffffffff16565b610dc590919063ffffffff16565b90506000610b09600054610afb60025488610d9990919063ffffffff16565b610dc590919063ffffffff16565b90505050915091565b6000610b1d82610d2f565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610b7c93929190611131565b602060405180830381600087803b158015610b9657600080fd5b505af1158015610baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce9190610ff1565b610c0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c04906111b4565b60405180910390fd5b8160016000828254610c1f91906111d4565b925050819055508060026000828254610c389190610f1b565b925050819055507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c9a929190610f90565b602060405180830381600087803b158015610cb457600080fd5b505af1158015610cc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cec9190610ff1565b610d2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d22906110e7565b60405180910390fd5b5050565b600080610d4783600154610daf90919063ffffffff16565b90506000610d6082600354610dc590919063ffffffff16565b9050610d7781600254610ddb90919063ffffffff16565b9250600254831415610d92578280610d8e90611107565b9350505b5050919050565b60008183610da79190611296565b905092915050565b60008183610dbd91906111d4565b905092915050565b60008183610dd391906114af565b905092915050565b60008183610de99190610f1b565b905092915050565b600080fd5b6000819050919050565b610e0981610df6565b8114610e1457600080fd5b50565b600081359050610e2681610e00565b92915050565b600060208284031215610e4257610e41610df1565b5b6000610e5084828501610e17565b91505092915050565b610e6281610df6565b82525050565b6000602082019050610e7d6000830184610e59565b92915050565b60008060408385031215610e9a57610e99610df1565b5b6000610ea885828601610e17565b9250506020610eb985828601610e17565b9150509250929050565b6000604082019050610ed86000830185610e59565b610ee56020830184610e59565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f2682610df6565b9150610f3183610df6565b925082821015610f4457610f43610eec565b5b828203905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f7a82610f4f565b9050919050565b610f8a81610f6f565b82525050565b6000604082019050610fa56000830185610f81565b610fb26020830184610e59565b9392505050565b60008115159050919050565b610fce81610fb9565b8114610fd957600080fd5b50565b600081519050610feb81610fc5565b92915050565b60006020828403121561100757611006610df1565b5b600061101584828501610fdc565b91505092915050565b600082825260208201905092915050565b7f546f6b656e31207472616e73666572206661696c656400000000000000000000600082015250565b600061106560168361101e565b91506110708261102f565b602082019050919050565b6000602082019050818103600083015261109481611058565b9050919050565b7f546f6b656e32207472616e73666572206661696c656400000000000000000000600082015250565b60006110d160168361101e565b91506110dc8261109b565b602082019050919050565b60006020820190508181036000830152611100816110c4565b9050919050565b600061111282610df6565b9150600082141561112657611125610eec565b5b600182039050919050565b60006060820190506111466000830186610f81565b6111536020830185610f81565b6111606040830184610e59565b949350505050565b7f546f6b656e31205472616e7366657246726f6d206661696c6564000000000000600082015250565b600061119e601a8361101e565b91506111a982611168565b602082019050919050565b600060208201905081810360008301526111cd81611191565b9050919050565b60006111df82610df6565b91506111ea83610df6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561121f5761121e610eec565b5b828201905092915050565b7f546f6b656e31205472616e7366657246726f6d204661696c6564000000000000600082015250565b6000611260601a8361101e565b915061126b8261122a565b602082019050919050565b6000602082019050818103600083015261128f81611253565b9050919050565b60006112a182610df6565b91506112ac83610df6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112e5576112e4610eec565b5b828202905092915050565b7f657175616c20616d6f756e74206f6620746f6b656e73206e6f7420737570706c60008201527f6965640000000000000000000000000000000000000000000000000000000000602082015250565b600061134c60238361101e565b9150611357826112f0565b604082019050919050565b6000602082019050818103600083015261137b8161133f565b9050919050565b7f76616c696420616d6f756e742068617320746f2062652070726f766964656400600082015250565b60006113b8601f8361101e565b91506113c382611382565b602082019050919050565b600060208201905081810360008301526113e7816113ab565b9050919050565b7f7368617265206d757374206265206c657373207468616e20746f74616c20736860008201527f6172657300000000000000000000000000000000000000000000000000000000602082015250565b600061144a60248361101e565b9150611455826113ee565b604082019050919050565b600060208201905081810360008301526114798161143d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006114ba82610df6565b91506114c583610df6565b9250826114d5576114d4611480565b5b82820490509291505056fea2646970667358221220630da465b50f9cfa3bb7975959ae9b1b4d3ac735878b5b70da9a212a4ed5c86a64736f6c63430008090033";

type AMMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AMMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AMM__factory extends ContractFactory {
  constructor(...args: AMMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token1: PromiseOrValue<string>,
    _token2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AMM> {
    return super.deploy(_token1, _token2, overrides || {}) as Promise<AMM>;
  }
  override getDeployTransaction(
    _token1: PromiseOrValue<string>,
    _token2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token1, _token2, overrides || {});
  }
  override attach(address: string): AMM {
    return super.attach(address) as AMM;
  }
  override connect(signer: Signer): AMM__factory {
    return super.connect(signer) as AMM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AMMInterface {
    return new utils.Interface(_abi) as AMMInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): AMM {
    return new Contract(address, _abi, signerOrProvider) as AMM;
  }
}
